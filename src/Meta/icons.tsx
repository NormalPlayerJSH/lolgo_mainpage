import React from 'react';
import { TeamType } from '../types/analyInterface';

const killIcon = (length:string) => (
  (team:TeamType) => (
    <svg xmlns="http://www.w3.org/2000/svg" viewBox="104.1 105.3 66.44 72.87" width={length} height={length} fill={`${team === 100 ? '#425cea' : '#ba5657'}`}>
      <path d="M114.1,162.9c0,0,49.16-77.11,51.08-52.9S114.1,162.9,114.1,162.9z" />
      <path d="M104.1,172.22l10-9.31c0,0,0,19.51-5,14.41C104.1,172.22,104.1,172.22,104.1,172.22z" />
      <path d="M160.44,162.69c0,0-49.94-76.6-51.62-52.37S160.44,162.69,160.44,162.69z" />
      <path d="M170.54,171.9l-10.09-9.21c0,0,0.2,19.51,5.15,14.36C170.54,171.9,170.54,171.9,170.54,171.9z" />
    </svg>
  ));

const baronIcon = (length:string) => (
  (isWhite?:boolean) => {
    let color = '#d138ca';
    if (isWhite) color = 'white';
    return (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="82.28 85.92 105.64 104.59" width={length} height={length} fill={color}>
        <path d="M184.72,108.39l-38.54-22.22c-1.42-0.82-3.06,0.68-2.35,2.17l11.57,24.44c2.17,4.59-1.04,10.11-6.12,10.11  c-0.73,0-1.47-0.12-2.18-0.41c-5-2-12-11.99-12-11.99v-0.02c0,0-7,9.99-12,11.99c-0.71,0.29-1.45,0.41-2.18,0.41  c-5.08,0-8.29-5.52-6.12-10.11l11.57-24.44c0.7-1.49-0.93-2.99-2.35-2.17l-38.54,22.22c-2.99,1.73-4.07,5.52-2.43,8.56l11.06,20.54  c-1.14,21,24,54,27,53s2-12.02,2-12.02h12v0.02h12c0,0-1,11.02,2,12.02s28.14-32,27-53l11.06-20.54  C188.8,113.91,187.72,110.12,184.72,108.39z M122.1,155.47c-2.76,0-5-2.24-5-5s2.24-5,5-5s5,2.24,5,5S124.86,155.47,122.1,155.47z   M135.1,168.47c-2.76,0-5-2.24-5-5s2.24-5,5-5s5,2.24,5,5S137.86,168.47,135.1,168.47z M135.1,142.47c-2.76,0-5-2.24-5-5s2.24-5,5-5  s5,2.24,5,5S137.86,142.47,135.1,142.47z M148.1,155.47c-2.76,0-5-2.24-5-5s2.24-5,5-5s5,2.24,5,5S150.86,155.47,148.1,155.47z" />
      </svg>
    );
  });

const dragonIcon = (length:string) => (
  (
    dragon?:'FIRE_DRAGON'
    | 'EARTH_DRAGON'
    | 'WATER_DRAGON'
    | 'AIR_DRAGON'
    | 'ELDER_DRAGON'
    | TeamType,
  ) => {
    const dragonColor = {
      FIRE_DRAGON: '#d75151',
      EARTH_DRAGON: '#d98d59',
      WATER_DRAGON: '#2ea2ca',
      AIR_DRAGON: '#34FFD1',
      ELDER_DRAGON: '#d138ca',
      100: '#425cea',
      200: '#ba5657',
    };
    let color = 'white';
    if (dragon) color = dragonColor[dragon];
    return (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="86.02 79.44 106 108.36" width={length} height={length} fill={color}>
        <path d="M192.02,112.8l-18.5-0.5l-1-27l-20,19l-13.5-24.86l-13.5,24.86l-20-19l-1,27l-18.5,0.5l17.64,20.82  c0,0-3.64,26.18,7.36,27.18s20.07,27,20.07,27h7.93h7.93c0,0,9.07-26,20.07-27s7.36-27.18,7.36-27.18L192.02,112.8z M131.52,152.51  c0,0-10-2.21-17-23.21l17,12V152.51z M146.52,152.51V141.3l17-12C156.52,150.3,146.52,152.51,146.52,152.51z" />
      </svg>
    );
  });

const heraldIcon = (length:string) => (
  (isWhite?: boolean) => {
    let color = '#d138ca';
    if (isWhite) color = 'white';
    return (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="83.8 88.5 107.03 93.25" width={length} height={length} fill={color}>
        <g>
          <path d="M83.83,165.37l13-11c0,0,9,25,10,27S82.83,177.37,83.83,165.37z" />
          <path className="st0" d="M182.8,119.37c-3.25-15.45-18.4-26.93-23.95-30.68c-0.8-0.54-1.85,0.13-1.73,1.08   c3.4,26.43-1.32,23.6-1.32,23.6c-7.99-4.99-14.24-6.04-18.49-5.84c-4.25-0.2-10.49,0.84-18.49,5.84c0,0-4.72,2.83-1.32-23.6   c0.12-0.95-0.93-1.62-1.73-1.08c-5.55,3.75-20.7,15.23-23.95,30.68c-4,19-2,25-2,25s12,1,15,6c2.88,4.8,9.45,25.79,29.88,24.99   c1.74-0.07,3.47-0.07,5.21,0c20.43,0.79,27-20.19,29.88-24.99c3-5,15-6,15-6S186.8,138.37,182.8,119.37z M137.32,160.76   c-0.32-0.15-25.44-12.47-17.49-26.39c3.66-6.41,9.01-8.83,13.72-9.58c0.97-0.14,2.14-0.26,3.45-0.28c0.1,0,0.21,0,0.31,0   c0.1,0,0.21,0,0.31,0c1.31,0.02,2.49,0.14,3.45,0.28c4.71,0.75,10.06,3.17,13.72,9.58C162.75,148.28,137.63,160.6,137.32,160.76z" />
          <polygon points="137.33,156.03 144.8,141.37 137.33,128.5 137.33,128.45 137.32,128.48 137.3,128.45 137.3,128.5    129.83,141.37 137.3,156.03 137.3,156.08 137.32,156.06 137.33,156.08  " />
          <path d="M190.8,165.37l-13-11c0,0-9,25-10,27S191.8,177.37,190.8,165.37z" />
        </g>
      </svg>
    );
  });

const towerIcon = (length:string) => (
  (team?:TeamType) => {
    let color = 'white';
    if (team) color = team === 100 ? '#425cea' : '#ba5657';
    return (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="118.37 90.8 56 82.79" width={length} height={length} fill={color}>
        <g>
          <path d="M160.38,113.09l4.02-3.98l-17.91-18.31l-18.09,18.13l3.98,4.02l-14.01,2.93l27.86,29.38l28.14-29.11   L160.38,113.09z M146.35,119.7l-7.47-7.21l7.54-7.84l7.46,7.92L146.35,119.7z" />
          <polygon points="146.2,150.87 126.78,133.43 133.59,173.47 146.09,173.53 158.59,173.59 165.78,133.62  " />
        </g>
      </svg>
    );
  });

const inhibitorIcon = (length:string) => (
  (team?:TeamType) => {
    let color = 'white';
    if (team) color = team === 100 ? '#425cea' : '#ba5657';
    return (
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="85.81 84.42 102 102" width={length} height={length} fill={color}>
        <g>
          <path d="M136.81,84.42c-28.17,0-51,22.83-51,51c0,28.17,22.83,51,51,51s51-22.83,51-51   C187.81,107.26,164.97,84.42,136.81,84.42z M136.81,167.92c-17.95,0-32.5-14.55-32.5-32.5c0-17.95,14.55-32.5,32.5-32.5   s32.5,14.55,32.5,32.5C169.31,153.37,154.75,167.92,136.81,167.92z" />
          <rect x="121.48" y="120.09" transform="matrix(0.7071 -0.7071 0.7071 0.7071 -55.6887 136.4005)" width="30.66" height="30.66" />
        </g>
      </svg>
    );
  });

export const getIcons = (length:string) => ({
  baronIcon: baronIcon(length),
  towerIcon: towerIcon(length),
  inhibitorIcon: inhibitorIcon(length),
  dragonIcon: dragonIcon(length),
  heraldIcon: heraldIcon(length),
  killIcon: killIcon(length),
});

export default getIcons;
